networks:
  formease_network:
    name: formease_network

services:
  mongodb:
    image: mongo:latest
    container_name: formease-mongodb-dev
    user: root
    networks:
      - formease_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
        
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    container_name: formease-backend-dev
    networks:
      - formease_network
    environment:
      MONGODB_URI: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      PORT: ${BACKEND_PORT}
      GIN_MODE: debug
      TOKEN_EXPIRATION_HOURS: ${TOKEN_EXPIRATION_HOURS}
      AUTH_SECRET: ${AUTH_SECRET}
      ENV: ${ENV}
      AIR_FORCE_POLL: true
    volumes:
      - ../backend:/app:z
      - backend_tmp:/app/tmp
    ports:
      - "8080:${BACKEND_PORT}"
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  frontend:
      build:
        context: ../frontend
        dockerfile: Dockerfile.dev
      container_name: formease-frontend-dev
      networks:
        - formease_network
      env_file:
        - .env
      environment:
        NODE_ENV: ${NODE_ENV}
        AUTH_SECRET: ${AUTH_SECRET}
      volumes:
        - ../frontend:/app
        - /app/node_modules
      command: npm run dev -- --host
      ports:
        - "3000:5170"
      depends_on:
        backend:
          condition: service_healthy

volumes:
  mongodb_data:
  backend_tmp: